<div class='page_title_container'>
    <h2 class='page_title'>מסך מנהל</h2>
</div>


<div class='admin_page_container'>
    <div class='admin_twitt_container'>
        <div class='twitt_label'>צייץ: </div>
        <a class="twitter-share-button"
           href="https://twitter.com/intent/tweet?text="
           data-size="large">
        </a>
    </div>
    
    <div class='admin_graph_container'>
        <div class='admin_graph' id='graph_1'>
            <h1>מכירות של מוצרים בכל סניף</h1>
            <div id="stat_1"></div>
        </div>
        <div class='admin_graph' id='graph_2'>
            <h1>מכירות לפי סוגי מוצרים</h1>
            <div id="stat_2"></div>
        </div>
    </div>
</div>


<script src='~/lib/jquery/dist/jquery.js'></script>
<script src="~/lib/d3/d3.js"></script>
<script>
    window.twttr = (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0],
            t = window.twttr || {};
        if (d.getElementById(id)) return t;
        js = d.createElement(s);
        js.id = id;
        js.src = "https://platform.twitter.com/widgets.js";
        fjs.parentNode.insertBefore(js, fjs);

        t._e = [];
        t.ready = function (f) {
            t._e.push(f);
        };

        return t;
    }(document, "script", "twitter-wjs"));</script>
<script>
    $.ajax({
        type: 'GET',
        url: '/Admin/BranchSales',
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: (res) => {
            createGraphWithData('#stat_1', res);
            //createPieChartWithData('#stat_1', res);
        },
    });

    $.ajax({
        type: 'GET',
        url: '/Admin/ProductSales',
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: (res) => createGraphWithData('#stat_2', res),
    });

    function createGraphWithData(element, data) {
        var colors = ['#F44336', '#5C6BC0', '#1E88E5', '#4DD0E1', '#0288D1', '#00897B'];
        var margin = ({ top: 20, right: 0, bottom: 30, left: 40 });
        var height = 300;
        var width = 430;
        var yAxis = g => g
            .attr("transform", `translate(${margin.left},0)`)
            .call(d3.axisLeft(y))
            .call(g => g.select(".domain").remove());
        var xAxis = g => g
            .attr("transform", `translate(0,${height - margin.bottom})`)
            .call(d3.axisBottom(x)
                .tickSizeOuter(0));
        var y = d3.scaleLinear()
            .domain([0, d3.max(data, d => d.count)]).nice()
            .range([height - margin.bottom, margin.top]);
        var x = d3.scaleBand()
            .domain(data.map(d => d.name))
            .range([margin.left, width - margin.right])
            .padding(0.1);

        var svg = d3.select(element)
            .append('svg')
            .attr('width', width)
            .attr('height', height);

        svg.append("g")
            .attr("fill", "steelblue")
            .selectAll("rect").data(data).enter().append("rect")
            .attr("x", d => x(d.name))
            .attr("y", d => y(d.count))
            .attr("height", d => y(0) - y(d.count))
            .attr("width", x.bandwidth())
            .attr("fill", (d, i) => { return colors[i % colors.length] });

        svg.append("g")
            .call(xAxis);

        svg.append("g")
            .call(yAxis);

        svg.node();

        $('.admin_page_container').css('visibility', 'visible');
        $('.admin_page_container').css('animation-name', 'fade');
    }

    function createPieChartWithData(element, data) {

        var pie = d3.pie()
            .sort(null)
            .value(d => d.count);

        var radius = Math.min(width, height) / 2;

        var arcLabel = d3.arc().innerRadius(radius).outerRadius(radius);

        var arc = d3.arc()
            .innerRadius(0)
            .outerRadius(Math.min(width, height) / 2 - 1);

        var width = 500;

        var height = Math.min(width, 500);

        var color = d3.scaleOrdinal()
            .domain(data.map(d => d.name))
            .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse());

        var arcs = pie(data);

        var svg = d3.select('#stat_3')
            .attr("text-anchor", "middle")
            .style("font", "12px sans-serif");

        var g = svg.append("g")
            .attr("transform", `translate(${width / 2},${height / 2})`);

        g.selectAll("path")
            .data(arcs)
            .enter().append("path")
            .attr("fill", d => color(d.data.name))
            .attr("stroke", "white")
            .attr("d", arc)
            .append("title")
            .text(d => `${d.data.name}: ${d.data.count.toLocaleString()}`);

        var text = g.selectAll("text")
            .data(arcs)
            .enter().append("text")
            .attr("transform", d => `translate(${arcLabel.centroid(d)})`)
            .attr("dy", "0.35em");

        text.append("tspan")
            .attr("x", 0)
            .attr("y", "-0.7em")
            .style("font-weight", "bold")
            .text(d => d.data.name);

        text.filter(d => (d.endAngle - d.startAngle) > 0.25).append("tspan")
            .attr("x", 0)
            .attr("y", "0.7em")
            .attr("fill-opacity", 0.7)
            .text(d => d.data.count.toLocaleString());

        svg.node();
    }
</script>
